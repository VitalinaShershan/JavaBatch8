Abstraction:
is a process of showing the functionality
to the user and hiding the implementation details.
we can achieve the abstraction in java in two ways
1) Abstract classes and other one is Interfaces
Abstract classes can have abstract methods we can implement those abstract methods in
our child classes.
Rules to follow:
We can have as many abstract methods as we want in a class.
1) To declare an abstract we can use abstract keyword.
2)we can't have abstract methods as private because they will never be
inherited and we will not able to provide implementation for those
2) same way we can't declare our methods as final because final methods can never be overridden
abstract class ParentClass{

public abstract method1();
}
Interfaces
always have fields as public static and final. which means we cannot change them we can
only access them.
fields or methods can never be private in interface, because we cant create an object in this class, so they will have to create
it in some other class, hence we need to have an access to them.

all the string are -->public, static, final -- so they cant be changed, the only can be used as they are
even if we dont write "public static final" they will be added autamatically by compiler
-->method (public, abstastract)

multiple unheritance is possible usuing interefaces ( 1 class can inherite from many classes) not like with abstraction